apiVersion: batch/v1
kind: Job
metadata:
  name: subgen-model-download
  namespace: media
  labels:
    app.kubernetes.io/name: subgen-model-download
spec:
  ttlSecondsAfterFinished: 600
  backoffLimit: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: subgen-model-download
    spec:
      restartPolicy: OnFailure
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: download-model
          image: python:3.14-slim
          command:
            - /bin/bash
            - -c
            - |
              set -e
              export HOME=/tmp
              echo "Installing faster-whisper..."
              pip install --user --no-cache-dir faster-whisper huggingface-hub
              export PATH="$HOME/.local/bin:$PATH"
              
              echo "Downloading large-v3 model..."
              python3 << 'EOF'
              from huggingface_hub import snapshot_download
              import os
              
              model_name = "Systran/faster-whisper-large-v3"
              cache_dir = "/models"
              
              print(f"Downloading {model_name} to {cache_dir}...")
              snapshot_download(
                  repo_id=model_name,
                  cache_dir=cache_dir,
                  local_files_only=False,
              )
              print("Download complete!")
              
              # Verify the model files exist
              import os
              for root, dirs, files in os.walk(cache_dir):
                  for file in files:
                      filepath = os.path.join(root, file)
                      size = os.path.getsize(filepath)
                      print(f"  {filepath}: {size} bytes")
              EOF
              
              echo "Model download successful!"
          volumeMounts:
            - name: models
              mountPath: /models
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1000m"
              memory: "2Gi"
      volumes:
        - name: models
          persistentVolumeClaim:
            claimName: subgen-models
