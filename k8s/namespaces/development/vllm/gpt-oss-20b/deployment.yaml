apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-gpt-oss-20b
  namespace: development
  labels:
    app.kubernetes.io/name: vllm-gpt-oss-20b
    app.kubernetes.io/managed-by: flux
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: vllm-gpt-oss-20b
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vllm-gpt-oss-20b
        app.kubernetes.io/managed-by: flux
    spec:
      runtimeClassName: nvidia
      terminationGracePeriodSeconds: 3600
      containers:
      - name: vllm
        # renovate: datasource=docker depName=docker.io/vllm/vllm-openai
        image: docker.io/vllm/vllm-openai:gptoss@sha256:23c3feefba723be97ff9e9bd769aed7d165839a79bc042eb8f3a13dd2a469e1c
        imagePullPolicy: IfNotPresent
        args:
          - --model
          - openai/gpt-oss-20b
          - --tensor-parallel-size
          - "1"
          - --max-model-len
          - "32768"
          - --kv-cache-dtype
          - fp8_e5m2
          - --max-num-seqs
          - "1"
          - --gpu-memory-utilization
          - "0.92"
          - --enable-chunked-prefill
          - --async-scheduling
          - --enable-prefix-caching
          - --cpu-offload-gb
          - "2"
          - --swap-space
          - "8"
          - --max-parallel-loading-workers
          - "2"
        env:
        - name: HUGGING_FACE_HUB_TOKEN
          valueFrom: { secretKeyRef: { name: vllm-secrets, key: token } }
        - name: VLLM_ATTENTION_BACKEND
          value: TRITON_ATTN_VLLM_V1
        - name: VLLM_LOGGING_LEVEL
          value: INFO
        - name: PYTORCH_CUDA_ALLOC_CONF
          value: "expandable_segments:True"
        - name: NCCL_P2P_DISABLE
          value: "1"
        - name: NCCL_IB_DISABLE
          value: "1"
        - name: HF_HUB_ENABLE_HF_TRANSFER
          value: "1"
        ports:
        - containerPort: 8000
          name: http
        resources:
          requests:
            cpu: "2"
            memory: "24Gi"
            nvidia.com/gpu: "1"
          limits:
            cpu: "4"
            memory: "24Gi"
            nvidia.com/gpu: "1"
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop: ["ALL"]
        volumeMounts:
        - { name: cache-volume, mountPath: /root/.cache/huggingface }
        - { name: shm,         mountPath: /dev/shm }
        readinessProbe:
          httpGet: { path: /health, port: http }
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 60
        startupProbe:
          httpGet: { path: /health, port: http }
          periodSeconds: 10
          failureThreshold: 540
        lifecycle:
          postStart:
            exec:
              command: ["bash","-lc","nvidia-smi || true; ls -l /dev/nvidia* || true"]
      volumes:
      - name: cache-volume
        persistentVolumeClaim: { claimName: gpt-oss-20b-pvc }
      - name: shm
        emptyDir:
          medium: Memory
          sizeLimit: "16Gi"
