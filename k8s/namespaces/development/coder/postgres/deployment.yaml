apiVersion: apps/v1
kind: Deployment
metadata:
  name: coder-postgres
  namespace: development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: coder-postgres
  template:
    metadata:
      labels:
        app: coder-postgres
    spec:
      runtimeClassName: youki
      securityContext:
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      automountServiceAccountToken: false
      containers:
        - name: postgres
        # renovate: datasource=docker depName=docker.io/postgres
          image: docker.io/postgres:17.6@sha256:d17be73073d6e73a005c239c67b8c9f0331925d05bd874964f445a9f698fbf72
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: coder-secrets
                  key: POSTGRES_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: coder-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: coder
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: 5432
              protocol: TCP
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
          startupProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 24
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 6
          volumeMounts:
            - name: db
              mountPath: /var/lib/postgresql/data
              subPath: pgdata
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: coder-db
