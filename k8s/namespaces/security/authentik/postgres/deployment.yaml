apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentik-postgres-17
  namespace: security
  labels:
    app.kubernetes.io/name: authentik-postgres-17
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: authentik-postgres-17
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: authentik-postgres-17
    spec:
      securityContext:
        fsGroup: 999
      containers:
      - name: postgres
        # renovate: datasource=docker depName=docker.io/postgres
        image: docker.io/postgres:17.6@sha256:bb51eb307fdaa5abc9866ab9ff9b93dbe639a56d0345e078ff7f96f39a22252e
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: "authentik"
        - name: POSTGRES_USER
          value: "authentik"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: authentik-postgres-secrets
              key: POSTGRES_PASSWORD
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
          subPath: postgres
        resources:
          limits:
            memory: 1Gi
            cpu: "1"
          requests:
            memory: 256Mi
            cpu: 200m
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: authentik-postgres-pvc
