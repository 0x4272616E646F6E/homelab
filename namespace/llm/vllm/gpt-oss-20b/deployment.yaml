apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-gpt-oss-20b
  namespace: llm
  labels: { app: vllm-gpt-oss-20b }
spec:
  replicas: 1
  selector:
    matchLabels: { app: vllm-gpt-oss-20b }
  template:
    metadata:
      labels: { app: vllm-gpt-oss-20b }
    spec:
      runtimeClassName: nvidia
      containers:
      - name: vllm
        image: vllm/vllm-openai:gptoss
        args:
          - --model
          - openai/gpt-oss-20b
          - --tensor-parallel-size
          - "1"
          - --gpu-memory-utilization
          - "0.95"
          - --max-model-len
          - "131072"
        env:
        - name: HUGGING_FACE_HUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: vllm-secrets
              key: token
        ports:
        - containerPort: 8000
          name: http
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
            nvidia.com/gpu: "1"
          limits:
            cpu: "4"
            memory: "8Gi"
            nvidia.com/gpu: "1"
        volumeMounts:
        - name: cache-volume
          mountPath: /root/.cache/huggingface
        - name: shm
          mountPath: /dev/shm
        readinessProbe:
          httpGet: { path: /health, port: http }
          initialDelaySeconds: 60
          periodSeconds: 5
        livenessProbe:
          httpGet: { path: /health, port: http }
          initialDelaySeconds: 60
          periodSeconds: 10

      volumes:
      - name: cache-volume
        persistentVolumeClaim:
          claimName: gpt-oss-20b-pvc
      - name: shm
        emptyDir:
          medium: Memory
          sizeLimit: "2Gi"