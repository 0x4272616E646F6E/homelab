apiVersion: apps/v1
kind: Deployment
metadata:
  name: gamevault
  namespace: games
  labels:
    app.kubernetes.io/name: gamevault
    app.kubernetes.io/managed-by: flux
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gamevault
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gamevault
    spec:
      runtimeClassName: youki
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      automountServiceAccountToken: false
      containers:
        - name: gamevault
        # renovate: datasource=docker depName=docker.io/phalcode/gamevault-backend
          image: docker.io/phalcode/gamevault-backend:latest@sha256:636cca1429f9c33c4ac277dcd0f8acf58d4c7bb7d27d83b361d7f055f9a115a8
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_HOST
              value: gamevault-postgres
            - name: DB_PORT
              value: "5432"
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: gamevault-secrets
                  key: POSTGRES_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gamevault-secrets
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
          volumeMounts:
            - name: config
              mountPath: /config
            - name: config
              mountPath: /media
              subPath: media
            - name: config
              mountPath: /files
              subPath: files
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: gamevault-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gamevault-postgres
  namespace: games
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gamevault-postgres
  template:
    metadata:
      labels:
        app: gamevault-postgres
    spec:
      runtimeClassName: youki
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      automountServiceAccountToken: false
      containers:
        - name: postgres
          image: docker.io/postgres:17@sha256:29e0bb09c8e7e7fc265ea9f4367de9622e55bae6b0b97e7cce740c2d63c2ebc0
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: gamevault-secrets
                  key: POSTGRES_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gamevault-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: gamevault
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: 5432
              protocol: TCP
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
          volumeMounts:
            - name: db
              mountPath: /var/lib/postgresql/data
              subPath: pgdata
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: gamevault-db
