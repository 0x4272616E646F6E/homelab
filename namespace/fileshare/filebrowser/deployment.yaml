apiVersion: apps/v1
kind: Deployment
metadata:
  name: filebrowser
  namespace: media
  labels:
    app.kubernetes.io/name: filebrowser
    app.kubernetes.io/managed-by: flux
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: filebrowser
  template:
    metadata:
      labels:
        app.kubernetes.io/name: filebrowser
        app.kubernetes.io/managed-by: flux
    spec:
      runtimeClassName: youki
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        initContainers:
        - name: init-config
          image: busybox:1.37@sha256:ab33eacc8251e3807b85bb6dba570e4698c3998eca6f0fc2ccb60575a563ea74
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              if [ ! -f /config/config.json ]; then
                echo "Creating default config.json"
                cat <<EOF > /config/config.json
              {
                "port": 80,
                "baseURL": "",
                "address": "",
                "log": "stdout",
                "database": "/database/filebrowser.db",
                "root": "/srv"
              }
              EOF
              fi
          volumeMounts:
            - name: config
              mountPath: /config
      containers:
        - name: filebrowser
        # renovate: datasource=docker depName=docker.io/filebrowser/filebrowser
          image: docker.io/filebrowser/filebrowser:s6@sha256:d3a20347e4d0cc567089d0734dee8c3dd47f540c4e2f4a9364e20a4f33ee2b09
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              protocol: TCP
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
          volumeMounts:
            - name: config
              mountPath: /config
            - name: db
              mountPath: /database
            - name: fileshare
              mountPath: /srv
              subPath: fileshare
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: filebrowser-config
        - name: db
          persistentVolumeClaim:
            claimName: filebrowser-db
        - name: fileshare
          persistentVolumeClaim:
            claimName: fileshare